/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NUM_L 1
#define OPT_L 2

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt {
    quick_tap_ms = <100>;
    tapping-term-ms = <150>;
};

// Better Caps Word
&caps_word {
    continue-list = <UNDERSCORE MINUS SPACE>;
};

// Sticky Layer Behavior - release sticky behavior after x ms
&sk {
    release-after-ms = <1800>;
};

// Bluetooth Alias
#define BT(n) BT_SEL n


// MACROS
// ===========================================================================================================
/*
	.----------------------------------------------------------------------.
	|  0  |  1  |  2  |  3  |  4  |          |  5  |  6  |  7  |  8  |  9  |
	|  10 |  11 |  12 |  13 |  14 |          |  15 |  16 |  17 |  18 |  19 |
	|  20 |  21 |  22 |  23 |  24 |          |  25 |  26 |  27 |  28 |  29 |
	'-----------------\  30 |  31 |          |  32 |  33 /-----------------'
	                   '--------------------------------'

*/
/ {
    macros {
        mc_alfred: mc_alfred {
            label = "mc_alfred";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
            = <&macro_press &kp LGUI>
            , <&macro_tap &kp SPACE>
            , <&macro_release &kp LGUI>
            ;
        };
        mc_pass: mc_pass {
            label = "mc_pass";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
            = <&macro_press &kp LGUI>
            , <&macro_press &kp LSHIFT>
            , <&macro_tap &kp SPACE>
            , <&macro_release &kp LGUI>
            , <&macro_release &kp LSHIFT>
            ;
        };
        mc_emoji: mc_emoji {
            label = "mc_emoji";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
            = <&macro_press &kp LGUI>
            , <&macro_press &kp LCTRL>
            , <&macro_tap &kp SPACE>
            , <&macro_release &kp LGUI>
            , <&macro_release &kp LCTRL>
            ;
        };
        mc_quote: mc_quote {
            label = "mc_quote";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
            = <&macro_tap &kp QUOT>
            , <&macro_tap &kp SPACE>
            ;
        };
        mc_dqt: mc_dqt {
            label = "mc_dqt";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
            = <&macro_press &kp LSHIFT>
            , <&macro_tap &kp QUOT>
            , <&macro_release &kp LSHIFT>
            , <&macro_tap &kp SPACE>
            ;
        };
        mc_grave: mc_grave {
            label = "mc_grave";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
            = <&macro_tap &kp GRAVE>
            , <&macro_tap &kp SPACE>
            ;
        };
        mc_tilde: mc_tilde {
            label = "mc_tilde";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
            = <&macro_press &kp LSHIFT>
            , <&macro_tap &kp GRAVE>
            , <&macro_release &kp LSHIFT>
            , <&macro_tap &kp SPACE>
            ;
        };
        mc_ss: mc_ss {
            label = "mc_ss";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
            = <&macro_press &kp RALT>
            , <&macro_tap &kp S>
            , <&macro_release &kp RALT>
            ;
        };
    };

// COMBOS
// ===========================================================================================================
/*
	.----------------------------------------------------------------------.
	|  0  |  1  |  2  |  3  |  4  |          |  5  |  6  |  7  |  8  |  9  |
	|  10 |  11 |  12 |  13 |  14 |          |  15 |  16 |  17 |  18 |  19 |
	|  20 |  21 |  22 |  23 |  24 |          |  25 |  26 |  27 |  28 |  29 |
	'-----------------\  30 |  31 |          |  32 |  33 /-----------------'
	                   '--------------------------------'
*/

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <35>;
            key-positions = <12 13>;
            bindings = <&kp ESC>;
            layers = <0 1 2 3>;
        };
        combo_ret {
            timeout-ms = <35>;
            key-positions = <16 17>;
            bindings = <&kp RET>;
            layers = <0 1 2 3>;
        };
        combo_alfred {
            timeout-ms = <35>;
            key-positions = <31 32>;
            bindings = <&mc_alfred>;
            layers = <0>;
        };
        combo_pass {
            timeout-ms = <35>;
            key-positions = <10 13>;
            bindings = <&mc_pass>;
            layers = <0>;
        };
        combo_emoji {
            timeout-ms = <35>;
            key-positions = <10 12>;
            bindings = <&mc_emoji>;
            layers = <0>;
        };
    };

    // BEHAVIOR    
    // ===========================================================================================================

    behaviors {
        ltp: layer_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        mtp: mod_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        bht: balanced_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&kp>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <170>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    tap_dances {
        shifty: shift_caps_word {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_SHIFTY";
        #binding-cells = <0>;
        tapping-term-ms = <150>;
        bindings = <&kp LSHFT>, <&caps_word>;
        };
    };

    // KEYMAP
    // ===========================================================================================================
    // -----------------------------------------------------------------------------
    /* 0 = Default
        .----------------------------------------------------------------------.
        |  Q       |  W  |  E  |  R  |  T      |          |  Y  |  U  |  I  |  O  |  P      |
        |  A       |  S  |  D  |  F  |  G      |          |  H  |  J  |  K  |  L  |BKSPC    |
        |  Z CTRL  |  X  |  C  |  V  |  B      |          |  N  |  M  |  ,  |  .  |SLSH RALT|
        '-----------------\ NUM | SPC CMD |          | SFT | SYM /--------------------------'
                           '--------------------------------'
    */

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
    &kp Q         &kp W  &kp E      &kp R      &kp T           &kp Y        &kp U      &kp I     &kp O    &kp P
    &kp A         &kp S  &kp D      &kp F      &kp G           &kp H        &kp J      &kp K     &kp L    &kp BACKSPACE
    &mtp LCTRL Z  &kp X  &kp C      &kp V      &kp B           &kp N        &kp M      &kp COMMA &kp DOT  &mtp LALT FSLH
                                    &mo NUM_L  &mtp LGUI SPACE &shifty      &kp TAB
            >;
        };
    
    // ===========================================================================================================
    // -----------------------------------------------------------------------------
    /* 1 = Numbers
        .----------------------------------------------------------------------.
        |  \  |  [  |  ]  |  ~  |  `  |          |   '   |  1   |  2  |  3  |  4     |
        | CMD |  (  |  )  |  :  |  ;  |          |  LFT  | DWN  |  UP | RHT |  -     |
        | CTL |  {  |  }  |  =  |  +  |          |   ÃŸ   |  5   |  6  |  7  |  ALT 8 |
        '-----------------\     | SPC |          | SFT 9 | SYM 0/--------------------'
                           '--------------------------------'
        */

        num_layer {
            label = "Numb";
            bindings = <
           &kp BSLH         &kp LBKT     &kp RBKT     &mc_tilde   &mc_grave        &mc_quote      &mt N1         &kp N2       &kp N3       &mt N4
           &sk RGUI         &kp LPRN     &kp RPRN     &kp COLON   &kp SEMI         &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT    &kp MINUS
           &mtp RCTRL PIPE  &kp LBRC     &kp RBRC     &kp EQUAL   &kp PLUS         &mc_ss         &mt N5         &mt N6       &mt N7       &mtp RALT N8
                                                      &trans      &trans           &mt LSHIFT N9  &kp N0
            >;
        };

    // ===========================================================================================================
    // -----------------------------------------------------------------------------
    /* 2 = Options
        .----------------------------------------------------------------------.
        |Q DEL|  W  |  C  |  V  |  X  |          |  J  |  F  |  U  |  O  |  Z  |
        |  A  |  S  |  T  |  R  |  B  |          |  K  |  N  |  E  |  I  |  H  |
        |  Y  |  G  |  L  |  D  |  P  |          |  .  |BKSPC|  K  |  ,  |MO_3 |
        '-----------------\ CTRL| SPC |          | SFT | RALT/-----------------'
                           '--------------------------------'
        */

        opt_layer {
            label = "Opti";
            bindings = <
           &kp F5     &kp F6     &kp F7     &kp F8      &trans              &trans         &kp C_PREV   &kp C_PP     &kp C_NEXT &kp C_MUTE
           &kp F1     &kp F2     &kp F3     &kp F4      &trans              &out OUT_USB   &sk RSHIFT   &sk RCTRL    &sk RALT   &sk RGUI
           &kp F9     &kp F10    &kp F11    &kp F12     &trans              &out OUT_BLE   &bt BT(0)    &bt BT(1)    &bt BT(2)  &bt BT(3)
                                            &trans      &bt BT_CLR          &bootloader    &trans
            >;
        };
    };
};

// ===========================================================================================================
